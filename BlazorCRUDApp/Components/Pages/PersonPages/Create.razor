@page "/people/create"
@inject BlazorCRUDApp.Data.ApplicationDbContext DB
@using BlazorCRUDApp.Data.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Person</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Person" OnValidSubmit="AddPerson" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="Person.FirstName" class="form-control" /> 
                <ValidationMessage For="() => Person.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="Person.LastName" class="form-control" /> 
                <ValidationMessage For="() => Person.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Person.Email" class="form-control" /> 
                <ValidationMessage For="() => Person.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Person.Address" class="form-control" /> 
                <ValidationMessage For="() => Person.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="city" class="form-label">City:</label> 
                <InputText id="city" @bind-Value="Person.City" class="form-control" /> 
                <ValidationMessage For="() => Person.City" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="region" class="form-label">Region:</label> 
                <InputText id="region" @bind-Value="Person.Region" class="form-control" /> 
                <ValidationMessage For="() => Person.Region" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="postalcode" class="form-label">PostalCode:</label> 
                <InputText id="postalcode" @bind-Value="Person.PostalCode" class="form-control" /> 
                <ValidationMessage For="() => Person.PostalCode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="country" class="form-label">Country:</label> 
                <InputText id="country" @bind-Value="Person.Country" class="form-control" /> 
                <ValidationMessage For="() => Person.Country" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phone" class="form-label">Phone:</label> 
                <InputText id="phone" @bind-Value="Person.Phone" class="form-control" /> 
                <ValidationMessage For="() => Person.Phone" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="fax" class="form-label">Fax:</label> 
                <InputText id="fax" @bind-Value="Person.Fax" class="form-control" /> 
                <ValidationMessage For="() => Person.Fax" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="homepage" class="form-label">HomePage:</label> 
                <InputText id="homepage" @bind-Value="Person.HomePage" class="form-control" /> 
                <ValidationMessage For="() => Person.HomePage" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/people">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Person Person { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddPerson()
    {
        DB.Persons.Add(Person);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/people");
    }
}
